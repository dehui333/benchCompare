

process {
  withLabel: pysam {
    // provide some environment e.g. conda, that has pysam
  }
  withLabel: samtools {
  }
  withLabel: bedtools {
  }
  withLabel: readbench {
    // provide some environment that meets requirements of q100bench
  }
}

//executor.memory = 200.GB
//executor.cpus = 36

params {
  // activate virtual environment for q100bench i.e. some_path/venv/bin/activate
  q100bench_activate = 
  
  // resource files information for q100bench i.e. benchconfig.txt
  q100bench_config = 
  
  // optional, bed file to give to q100bench --regions 
  q100bench_bed = null

  // optional, bed file to samtools view --region-file to exclude bam records from the start e.g. specific chromosomes 
  include_bed = null

  // optional, will separate added/remaining errors into files depending on whether they overlap with regions in this bed file
  separation_bed = null

  // reference for mapping reads 
  ref = 
  
  // bam of uncorrected reads mapped to the reference
  bef_bam = 
  
  // bam of corrected reads mapped to the reference
  aft_bam =

  // optional, yak triobin output for uncorrected reads
  bef_triobin = 
  
  // optional, yak triobin output for corrected reads
  aft_triobin = null 

  // split into subtasks each with this many reads for parallel processing/reduce space usage (when combined with cleaning up intermediate files)
  split_size = 100000
  
  // directory to publish output files
  publish_dir = 

}



//uncomment this to enable cleaning up intermediate files as the workflow runs
/*  
plugins {
  id 'nf-boost'
}
boost {
  cleanup = true
}
*/
